name: Build, Push to ECR, and Deploy to Lambda (Risk Agent)

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: contract-analysis-risk-agent
  LAMBDA_FUNCTION_NAME: RiskAgentHandler

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout source code
      - name: Checkout
        uses: actions/checkout@v4

      # ✅ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ✅ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ✅ Debug: Print the ECR Registry
      - name: Debug ECR Registry
        run: |
          echo "ECR Registry is: ${{ steps.login-ecr.outputs.registry }}"

      # ✅ Build, Tag, and Push image
      - name: Build, Tag, and Push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          echo "Building image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # ✅ Deploy image to Lambda
      - name: Deploy image to Lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
        run: |
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # ✅ Notify success
      - name: Send success notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "✅ Deploy Success — ${{ github.repository }}"
          to: ${{ github.event.head_commit.author.email }}
          from: ${{ secrets.SMTP_USER }}
          body: |
            ✅ The risk-agent Lambda was successfully deployed.
            Time: ${{ github.event.head_commit.timestamp }}

      # ✅ Notify failure
      - name: Send failure notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "❌ Deploy Failed — ${{ github.repository }}"
          to: ${{ github.event.head_commit.author.email }}
          from: ${{ secrets.SMTP_USER }}
          body: |
            ❌ Deployment failed.
            Check the GitHub Actions run:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
